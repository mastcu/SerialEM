/* soapClient.cpp
   Generated by gSOAP 2.7.3 from .\webserviceCommands.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.3 2010-06-04 18:49:14 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getCurrentTiltAngle(struct soap *soap, const char *soap_endpoint, const char *soap_action, int a, float &result)
{	struct ns__getCurrentTiltAngle soap_tmp_ns__getCurrentTiltAngle;
	struct ns__getCurrentTiltAngleResponse *soap_tmp_ns__getCurrentTiltAngleResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__getCurrentTiltAngle.a = a;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__getCurrentTiltAngle(soap, &soap_tmp_ns__getCurrentTiltAngle);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getCurrentTiltAngle(soap, &soap_tmp_ns__getCurrentTiltAngle, "ns:getCurrentTiltAngle", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getCurrentTiltAngle(soap, &soap_tmp_ns__getCurrentTiltAngle, "ns:getCurrentTiltAngle", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__getCurrentTiltAngleResponse = soap_get_ns__getCurrentTiltAngleResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__getCurrentTiltAngleResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setTiltAngle(struct soap *soap, const char *soap_endpoint, const char *soap_action, float tilt, float &result)
{	struct ns__setTiltAngle soap_tmp_ns__setTiltAngle;
	struct ns__setTiltAngleResponse *soap_tmp_ns__setTiltAngleResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__setTiltAngle.tilt = tilt;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__setTiltAngle(soap, &soap_tmp_ns__setTiltAngle);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setTiltAngle(soap, &soap_tmp_ns__setTiltAngle, "ns:setTiltAngle", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setTiltAngle(soap, &soap_tmp_ns__setTiltAngle, "ns:setTiltAngle", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__setTiltAngleResponse = soap_get_ns__setTiltAngleResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__setTiltAngleResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setXYStagePosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, float x, float y, float &r)
{	struct ns__setXYStagePosition soap_tmp_ns__setXYStagePosition;
	struct ns__setXYStagePositionResponse *soap_tmp_ns__setXYStagePositionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__setXYStagePosition.x = x;
	soap_tmp_ns__setXYStagePosition.y = y;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__setXYStagePosition(soap, &soap_tmp_ns__setXYStagePosition);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setXYStagePosition(soap, &soap_tmp_ns__setXYStagePosition, "ns:setXYStagePosition", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setXYStagePosition(soap, &soap_tmp_ns__setXYStagePosition, "ns:setXYStagePosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__setXYStagePositionResponse = soap_get_ns__setXYStagePositionResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	r = soap_tmp_ns__setXYStagePositionResponse->r;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setZ(struct soap *soap, const char *soap_endpoint, const char *soap_action, float z, float &result)
{	struct ns__setZ soap_tmp_ns__setZ;
	struct ns__setZResponse *soap_tmp_ns__setZResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__setZ.z = z;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__setZ(soap, &soap_tmp_ns__setZ);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setZ(soap, &soap_tmp_ns__setZ, "ns:setZ", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setZ(soap, &soap_tmp_ns__setZ, "ns:setZ", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__setZResponse = soap_get_ns__setZResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__setZResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getX(struct soap *soap, const char *soap_endpoint, const char *soap_action, float x, float &result)
{	struct ns__getX soap_tmp_ns__getX;
	struct ns__getXResponse *soap_tmp_ns__getXResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__getX.x = x;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__getX(soap, &soap_tmp_ns__getX);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getX(soap, &soap_tmp_ns__getX, "ns:getX", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getX(soap, &soap_tmp_ns__getX, "ns:getX", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__getXResponse = soap_get_ns__getXResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__getXResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getY(struct soap *soap, const char *soap_endpoint, const char *soap_action, float y, float &result)
{	struct ns__getY soap_tmp_ns__getY;
	struct ns__getYResponse *soap_tmp_ns__getYResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__getY.y = y;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__getY(soap, &soap_tmp_ns__getY);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getY(soap, &soap_tmp_ns__getY, "ns:getY", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getY(soap, &soap_tmp_ns__getY, "ns:getY", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__getYResponse = soap_get_ns__getYResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__getYResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getZ(struct soap *soap, const char *soap_endpoint, const char *soap_action, float z, float &result)
{	struct ns__getZ soap_tmp_ns__getZ;
	struct ns__getZResponse *soap_tmp_ns__getZResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__getZ.z = z;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__getZ(soap, &soap_tmp_ns__getZ);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getZ(soap, &soap_tmp_ns__getZ, "ns:getZ", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getZ(soap, &soap_tmp_ns__getZ, "ns:getZ", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__getZResponse = soap_get_ns__getZResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__getZResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setX(struct soap *soap, const char *soap_endpoint, const char *soap_action, float x, float &result)
{	struct ns__setX soap_tmp_ns__setX;
	struct ns__setXResponse *soap_tmp_ns__setXResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__setX.x = x;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__setX(soap, &soap_tmp_ns__setX);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setX(soap, &soap_tmp_ns__setX, "ns:setX", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setX(soap, &soap_tmp_ns__setX, "ns:setX", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__setXResponse = soap_get_ns__setXResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__setXResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__setY(struct soap *soap, const char *soap_endpoint, const char *soap_action, float y, float &result)
{	struct ns__setY soap_tmp_ns__setY;
	struct ns__setYResponse *soap_tmp_ns__setYResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__setY.y = y;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__setY(soap, &soap_tmp_ns__setY);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setY(soap, &soap_tmp_ns__setY, "ns:setY", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setY(soap, &soap_tmp_ns__setY, "ns:setY", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__setYResponse = soap_get_ns__setYResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__setYResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__NextMosaicMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, int MoveType, float &result)
{	struct ns__NextMosaicMove soap_tmp_ns__NextMosaicMove;
	struct ns__NextMosaicMoveResponse *soap_tmp_ns__NextMosaicMoveResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__NextMosaicMove.MoveType = MoveType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__NextMosaicMove(soap, &soap_tmp_ns__NextMosaicMove);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__NextMosaicMove(soap, &soap_tmp_ns__NextMosaicMove, "ns:NextMosaicMove", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__NextMosaicMove(soap, &soap_tmp_ns__NextMosaicMove, "ns:NextMosaicMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_float(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__NextMosaicMoveResponse = soap_get_ns__NextMosaicMoveResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__NextMosaicMoveResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__QueryMosaicImages(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Type, int &result)
{	struct ns__QueryMosaicImages soap_tmp_ns__QueryMosaicImages;
	struct ns__QueryMosaicImagesResponse *soap_tmp_ns__QueryMosaicImagesResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__QueryMosaicImages.Type = Type;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__QueryMosaicImages(soap, &soap_tmp_ns__QueryMosaicImages);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__QueryMosaicImages(soap, &soap_tmp_ns__QueryMosaicImages, "ns:QueryMosaicImages", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__QueryMosaicImages(soap, &soap_tmp_ns__QueryMosaicImages, "ns:QueryMosaicImages", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__QueryMosaicImagesResponse = soap_get_ns__QueryMosaicImagesResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__QueryMosaicImagesResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__BeginMosaic(struct soap *soap, const char *soap_endpoint, const char *soap_action, int MosaicType, int &result)
{	struct ns__BeginMosaic soap_tmp_ns__BeginMosaic;
	struct ns__BeginMosaicResponse *soap_tmp_ns__BeginMosaicResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__BeginMosaic.MosaicType = MosaicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__BeginMosaic(soap, &soap_tmp_ns__BeginMosaic);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__BeginMosaic(soap, &soap_tmp_ns__BeginMosaic, "ns:BeginMosaic", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__BeginMosaic(soap, &soap_tmp_ns__BeginMosaic, "ns:BeginMosaic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__BeginMosaicResponse = soap_get_ns__BeginMosaicResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__BeginMosaicResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__CheckifOk2Acquire(struct soap *soap, const char *soap_endpoint, const char *soap_action, int MosaicType, int &result)
{	struct ns__CheckifOk2Acquire soap_tmp_ns__CheckifOk2Acquire;
	struct ns__CheckifOk2AcquireResponse *soap_tmp_ns__CheckifOk2AcquireResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__CheckifOk2Acquire.MosaicType = MosaicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__CheckifOk2Acquire(soap, &soap_tmp_ns__CheckifOk2Acquire);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__CheckifOk2Acquire(soap, &soap_tmp_ns__CheckifOk2Acquire, "ns:CheckifOk2Acquire", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__CheckifOk2Acquire(soap, &soap_tmp_ns__CheckifOk2Acquire, "ns:CheckifOk2Acquire", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__CheckifOk2AcquireResponse = soap_get_ns__CheckifOk2AcquireResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__CheckifOk2AcquireResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__SerialGotAcquireToken(struct soap *soap, const char *soap_endpoint, const char *soap_action, int confirm, int &result)
{	struct ns__SerialGotAcquireToken soap_tmp_ns__SerialGotAcquireToken;
	struct ns__SerialGotAcquireTokenResponse *soap_tmp_ns__SerialGotAcquireTokenResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://services.xmethods.net/soap";
	soap->encodingStyle = "";
	soap_tmp_ns__SerialGotAcquireToken.confirm = confirm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__SerialGotAcquireToken(soap, &soap_tmp_ns__SerialGotAcquireToken);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__SerialGotAcquireToken(soap, &soap_tmp_ns__SerialGotAcquireToken, "ns:SerialGotAcquireToken", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__SerialGotAcquireToken(soap, &soap_tmp_ns__SerialGotAcquireToken, "ns:SerialGotAcquireToken", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__SerialGotAcquireTokenResponse = soap_get_ns__SerialGotAcquireTokenResponse(soap, NULL, "", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_ns__SerialGotAcquireTokenResponse->result;
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
