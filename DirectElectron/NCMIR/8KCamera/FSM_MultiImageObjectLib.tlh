// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (57588350).
//
// FSM_MultiImageObjectLib.tlh
//
// C++ source equivalent of Win32 type library ..\FSM_MultiImageObjectLib.tlb
// compiler-generated file created 12/02/08 at 11:44:28 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct /* coclass */ ImageObject;
struct __declspec(uuid("29ea315f-faba-43b6-92ec-2b2439af960f"))
/* dual interface */ IImageObject;
struct /* coclass */ SimpleImage;
struct __declspec(uuid("9be4fd23-c61b-4211-8220-df55f9bc621c"))
/* dual interface */ ISimpleImage;
struct SimpleImageParameters;
struct Rect;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IImageObject, __uuidof(IImageObject));
_COM_SMARTPTR_TYPEDEF(ISimpleImage, __uuidof(ISimpleImage));

//
// Type library items
//

struct __declspec(uuid("e32a3833-bf51-4ecc-ba7c-de1f7efb2a6e"))
ImageObject;
    // [ default ] interface IImageObject

struct __declspec(uuid("29ea315f-faba-43b6-92ec-2b2439af960f"))
IImageObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Allocate (
        int ImageNo,
        long width,
        long height,
        int depth ) = 0;
    virtual HRESULT __stdcall Free ( ) = 0;
    virtual HRESULT __stdcall GetDataPtr (
        int ImageNo,
        unsigned long * * plData ) = 0;
    virtual HRESULT __stdcall get_ImageWidth (
        int ImageNo,
        long * pVal ) = 0;
    virtual HRESULT __stdcall get_ImageHeight (
        int ImageNo,
        long * pVal ) = 0;
    virtual HRESULT __stdcall get_ImageDepth (
        int ImageNo,
        short * pVal ) = 0;
};

struct __declspec(uuid("eb88546c-aa74-4c0f-a442-668a03ccd176"))
SimpleImage;
    // [ default ] interface ISimpleImage

struct __declspec(uuid("9be4fd23-c61b-4211-8220-df55f9bc621c"))
ISimpleImage : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AllocateSimpleImageBuffer (
        struct SimpleImageParameters tParam ) = 0;
    virtual HRESULT __stdcall FreeImageBuffer ( ) = 0;
    virtual HRESULT __stdcall IsImageBufferAllocated (
        char * bIsAllocated ) = 0;
    virtual HRESULT __stdcall GetSimpleImageBufferParameters (
        struct SimpleImageParameters * ptParam ) = 0;
    virtual HRESULT __stdcall SetROI (
        struct Rect tRect ) = 0;
    virtual HRESULT __stdcall GetROI (
        struct Rect * ptRect ) = 0;
    virtual HRESULT __stdcall GetDataPtr (
        unsigned long * * pDataPtr ) = 0;
    virtual HRESULT __stdcall GetImagePtr (
        unsigned long * * pImagePtr ) = 0;
    virtual HRESULT __stdcall GetFramePtr (
        unsigned long ulFrameNumber,
        unsigned long * * pulFramePtr ) = 0;
};

struct SimpleImageParameters
{
    unsigned long ulNumberOfFrame;
    unsigned long ulNumberOfChannel;
    unsigned long ulWidth;
    unsigned long ulHeight;
    unsigned long ulBitDepth;
};

struct Rect
{
    unsigned long ulLeft;
    unsigned long ulTop;
    unsigned long ulRight;
    unsigned long ulBottom;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_FSM_MULTIIMAGEOBJECTLIBLib =
    {0x32c1b1cc,0xfd16,0x4916,{0xab,0x49,0xda,0x8f,0x6f,0x83,0xad,0x73}};
extern "C" const GUID __declspec(selectany) CLSID_ImageObject =
    {0xe32a3833,0xbf51,0x4ecc,{0xba,0x7c,0xde,0x1f,0x7e,0xfb,0x2a,0x6e}};
extern "C" const GUID __declspec(selectany) IID_IImageObject =
    {0x29ea315f,0xfaba,0x43b6,{0x92,0xec,0x2b,0x24,0x39,0xaf,0x96,0x0f}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleImage =
    {0xeb88546c,0xaa74,0x4c0f,{0xa4,0x42,0x66,0x8a,0x03,0xcc,0xd1,0x76}};
extern "C" const GUID __declspec(selectany) IID_ISimpleImage =
    {0x9be4fd23,0xc61b,0x4211,{0x82,0x20,0xdf,0x55,0xf9,0xbc,0x62,0x1c}};

#pragma pack(pop)
