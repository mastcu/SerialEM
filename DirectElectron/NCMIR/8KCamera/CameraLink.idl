// CameraLink.idl : IDL source for CameraLink.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (CameraLink.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "..\..\FSM_ImageData\FSM_MemoryLib\FSM_MemoryLib.idl";

	[
		object,
		uuid(ACC08F2E-96EC-4828-851F-705F09D5953D),
		dual,
		helpstring("ICameraCtrl Interface"),
		pointer_default(unique)
	]
	interface ICameraCtrl : IDispatch
	{
		[id(1), helpstring("method ShutterOpen")] HRESULT ShutterOpen();
		[id(2), helpstring("method ShutterClose")] HRESULT ShutterClose();
		[id(3), helpstring("method GenerateTestImage")] HRESULT GenerateTestImage();
		[id(4), helpstring("method CCD_ReadAndExpose")] HRESULT CCD_ReadAndExpose();
		[id(5), helpstring("method CCD_ReadNoExpose")] HRESULT CCD_ReadNoExpose();
		[id(6), helpstring("method ReadoutParam_RecAllFromHost")] HRESULT ReadoutParam_RecAllFromHost();
		[id(7), helpstring("method ReadoutParam_RecOneFromHost")] HRESULT ReadoutParam_RecOneFromHost([in]short offset);
		[id(8), helpstring("method ReadoutParam_TransAllToHost")] HRESULT ReadoutParam_TransAllToHost();
		[id(9), helpstring("method Status_TransToHost")] HRESULT Status_TransToHost();
		[id(10), helpstring("method ConfigParam_RecAllFromHost")] HRESULT ConfigParam_RecAllFromHost();
		[id(11), helpstring("method ConfigParam_RecOneFromHost")] HRESULT ConfigParam_RecOneFromHost();
		[id(12), helpstring("method ConfigParam_TransToHost")] HRESULT ConfigParam_TransToHost();
		[id(13), helpstring("method ConfigTable_StoreInEEPROM")] HRESULT ConfigTable_StoreInEEPROM();
		[id(14), helpstring("method RemainingExposureTime_SendToHost")] HRESULT RemainingExposureTime_SendToHost([out, retval] long *pVal);
		[id(15), helpstring("method AbortReadout")] HRESULT AbortReadout();
		[id(16), helpstring("method ConfigTable_ReadFromEEPROM")] HRESULT ConfigTable_ReadFromEEPROM();
		[id(17), helpstring("method RestartTheProgram")] HRESULT RestartTheProgram();
		[id(18), helpstring("method ClearFrame")] HRESULT ClearFrame();
		[id(19), helpstring("method ExternalRelayTurnOn")] HRESULT ExternalRelayTurnOn();
		[id(20), helpstring("method ExternalRelayTurnOff")] HRESULT ExternalRelayTurnOff();
		[id(21), helpstring("method ObtainTriggeredImage")] HRESULT ObtainTriggeredImage();
		[id(22), helpstring("method DSPCodeSave")] HRESULT DSPCodeSave();
		[id(23), helpstring("method DSPCodeGet")] HRESULT DSPCodeGet();
		[id(24), helpstring("method FixedLengthTDIModeReadout")] HRESULT FixedLengthTDIModeReadout();
		[id(25), helpstring("method SetReadoutParamTablePath")] HRESULT SetParamTablePath([in]BSTR bstrFile, [in]BSTR bstrString);
		[id(26), helpstring("method SetReadoutParamTablePath")] HRESULT SetConfigTablePath([in]BSTR bstrFile, [in]BSTR bstrString);
		[propget, id(27), helpstring("property ReadoutParam")] HRESULT ReadoutParam([in]int paramNo, [out, retval] long *pVal);
		[propput, id(27), helpstring("property ReadoutParam")] HRESULT ReadoutParam([in]int paramNo, [in] long newVal);
		[propget, id(28), helpstring("property ConfigParam")] HRESULT ConfigParam([in]int paramNo, [out, retval] long *pVal);
		[propput, id(28), helpstring("property ConfigParam")] HRESULT ConfigParam([in]int paramNo, [in] long newVal);
		[propget, id(29), helpstring("property StatusParam")] HRESULT StatusParam([in]int paramNo, [out, retval] long *pVal);
		[propput, id(29), helpstring("property StatusParam")] HRESULT StatusParam([in]int paramNo, [in] long newVal);
		[propget, id(30), helpstring("property COMPort")] HRESULT COMPort([out, retval] short *pVal);
		[propput, id(30), helpstring("property COMPort")] HRESULT COMPort([in] short newVal);
		[id(31), helpstring("method ChangeReadoutSpeed")] HRESULT ChangeReadoutSpeed([in]int no);
		[propget, id(32), helpstring("property AvailableReadoutSpeeds")] HRESULT AvailableReadoutSpeeds([out, retval] short *pVal);
//		[propget, id(33), helpstring("property ReadoutSpeed")] HRESULT ReadoutSpeed([out, retval] short *pVal);
//		[propput, id(33), helpstring("property ReadoutSpeed")] HRESULT ReadoutSpeed([in] short newVal);
		[propget, id(34), helpstring("property SerialBinnig")] HRESULT SerialBinning([out, retval] short *pVal);
		[propput, id(34), helpstring("property SerialBinnig")] HRESULT SerialBinning([in] short newVal);
		[propget, id(35), helpstring("property ParallelBinning")] HRESULT ParallelBinning([out, retval] short *pVal);
		[propput, id(35), helpstring("property ParallelBinning")] HRESULT ParallelBinning([in] short newVal);
		[id(36), helpstring("method SetBinning")] HRESULT SetBinning([in]short SerialBinning,[in]short ParallelBinning);
		[propget, id(37), helpstring("property ExposureTime")] HRESULT ExposureTime([out, retval] long *pVal);
		[propput, id(37), helpstring("property ExposureTime")] HRESULT ExposureTime([in] long newVal);
		[propget, id(38), helpstring("property SerialOrigin")] HRESULT SerialOrigin([out, retval] short *pVal);
		[propput, id(38), helpstring("property SerialOrigin")] HRESULT SerialOrigin([in] short newVal);
		[propget, id(39), helpstring("property ParallelOrigin")] HRESULT ParallelOrigin([out, retval] short *pVal);
		[propput, id(39), helpstring("property ParallelOrigin")] HRESULT ParallelOrigin([in] short newVal);
		[id(40), helpstring("method SetOrigin")] HRESULT SetOrigin([in]short SerialOrigin, [in]short ParallelOrigin);
		[propget, id(41), helpstring("property SerialLength")] HRESULT SerialLength([out, retval] short *pVal);
		[propput, id(41), helpstring("property SerialLength")] HRESULT SerialLength([in] short newVal);
		[propget, id(42), helpstring("property ParalleLength")] HRESULT ParalleLength([out, retval] short *pVal);
		[propput, id(42), helpstring("property ParalleLength")] HRESULT ParalleLength([in] short newVal);
		[id(43), helpstring("method SetImageSize")] HRESULT SetImageSize([in]short SerialLength, [in]short ParallelLength);
		[propget, id(44), helpstring("property SerialPostscanSize")] HRESULT SerialPostscanSize([out, retval] short *pVal);
		[propput, id(44), helpstring("property SerialPostscanSize")] HRESULT SerialPostscanSize([in] short newVal);
		[propget, id(45), helpstring("property ParallePostscanSize")] HRESULT ParallePostscanSize([out, retval] short *pVal);
		[propput, id(45), helpstring("property ParallePostscanSize")] HRESULT ParallePostscanSize([in] short newVal);
		[id(46), helpstring("method SetPostscanSize")] HRESULT SetPostscanSize([in]short SerialPostscan, [in]short ParallelPostscan);
		[id(47), helpstring("method GetReadoutSpeed")] HRESULT GetReadoutSpeed([in]short no,[out, retval]long *speed);
		[id(48), helpstring("method SetReadoutSpeed")] HRESULT SetReadoutSpeed([in]short no);
		[id(49), helpstring("method StartStatusThread")] HRESULT StartStatusThread([in]long SleepTime);
		[id(50), helpstring("method StopStatusThread")] HRESULT StopStatusThread();
		[id(51), helpstring("method SetDisplayMode")] HRESULT SetDisplayMode([in]short eMode);
		[id(52), helpstring("method SetDemoDisplay")] HRESULT OpenDemoDisplay();
		[id(53), helpstring("method CloseDemoDisplay")] HRESULT CloseDemoDisplay();
		[id(54), helpstring("method SetImageBuffer")] HRESULT SetImageBuffer([in] IFSM_MemoryObject* piMemObj);
		[id(55), helpstring("method SetDCFPath")] HRESULT SetDCFPath([in]short devNo, [in]short digNo, [in]BSTR bstrDCF);
	};

[
	uuid(FC48A9E6-5422-432F-8F24-843A28AA4892),
	version(1.0),
	helpstring("CameraLink 1.0 Type Library")
]
library CAMERALINKLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");
	importlib("..\..\FSM_ImageData\FSM_MemoryLib\FSM_MemoryLib.tlb");

	[
		uuid(36D64E79-4D06-443D-B8D4-B30E72F895E9),
		helpstring("_ICameraCtrlEvents Interface")
	]
	dispinterface _ICameraCtrlEvents
	{
		properties:
		methods:
		[id(1), helpstring("method CurrentStatus")] HRESULT CurrentStatus();
		[id(2), helpstring("method ImageCaptured")] HRESULT ImageCaptured([in]long ImageSizeX, [in]long ImageSizeY, [in]unsigned short *ImageData);
		[id(3), helpstring("method CaptureAvailable")] HRESULT CaptureAvailable();
	};
	[
		object,
		uuid(2BC903B7-25F0-4AE1-93F6-35CF3C985C07),
		dual,
		helpstring("ISI1100_MIL_Link Interface"),
		pointer_default(unique)
	]
	interface ISI1100_MIL_Link : IDispatch
	{
//		[id(1), helpstring("method InitMilApp")] HRESULT InitMilApp([out]long *plMilApp);
//		[id(2), helpstring("method FreeMilApp")] HRESULT FreeMilApp([in]long lMilApp);
		[id(1), helpstring("method InitMilApp")] HRESULT InitMilApp();
		[id(2), helpstring("method FreeMilApp")] HRESULT FreeMilApp();
	};
	[
		uuid(926953F1-6502-477F-996C-E16FABD9A70C),
		helpstring("CoCameraCtrl Class")
	]
	coclass CoCameraCtrl
	{
		[default] interface ICameraCtrl;
		[default, source] dispinterface _ICameraCtrlEvents;
	};
	[
		uuid(635B4F42-B658-4952-8056-01293E032003),
		helpstring("SI1100_MIL_Link Class")
	]
	coclass SI1100_MIL_Link
	{
		[default] interface ISI1100_MIL_Link;
	};
};
