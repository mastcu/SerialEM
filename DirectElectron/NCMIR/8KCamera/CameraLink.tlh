// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (d090abab).
//
// CameraLink.tlh
//
// C++ source equivalent of Win32 type library CameraLink.tlb
// compiler-generated file created 02/23/07 at 12:14:05 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "C:\Documents and Settings\root\Desktop\XPTomo\SpectralCamera4K\cameralink_update_9_14_06\FSM_MemoryLib.dll"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("36d64e79-4d06-443d-b8d4-b30e72f895e9"))
/* dispinterface */ _ICameraCtrlEvents;
struct __declspec(uuid("2bc903b7-25f0-4ae1-93f6-35cf3c985c07"))
/* dual interface */ ISI1100_MIL_Link;
struct /* coclass */ CoCameraCtrl;
struct __declspec(uuid("acc08f2e-96ec-4828-851f-705f09d5953d"))
/* dual interface */ ICameraCtrl;
struct /* coclass */ SI1100_MIL_Link;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_ICameraCtrlEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISI1100_MIL_Link, __uuidof(ISI1100_MIL_Link));
_COM_SMARTPTR_TYPEDEF(ICameraCtrl, __uuidof(ICameraCtrl));

//
// Type library items
//

struct __declspec(uuid("36d64e79-4d06-443d-b8d4-b30e72f895e9"))
_ICameraCtrlEvents : IDispatch
{};

struct __declspec(uuid("2bc903b7-25f0-4ae1-93f6-35cf3c985c07"))
ISI1100_MIL_Link : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall InitMilApp (
        long * plMilApp ) = 0;
    virtual HRESULT __stdcall FreeMilApp (
        long lMilApp ) = 0;
};

struct __declspec(uuid("926953f1-6502-477f-996c-e16fabd9a70c"))
CoCameraCtrl;
    // [ default ] interface ICameraCtrl
    // [ default, source ] dispinterface _ICameraCtrlEvents

struct __declspec(uuid("acc08f2e-96ec-4828-851f-705f09d5953d"))
ICameraCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ShutterOpen ( ) = 0;
    virtual HRESULT __stdcall ShutterClose ( ) = 0;
    virtual HRESULT __stdcall GenerateTestImage ( ) = 0;
    virtual HRESULT __stdcall CCD_ReadAndExpose ( ) = 0;
    virtual HRESULT __stdcall CCD_ReadNoExpose ( ) = 0;
    virtual HRESULT __stdcall ReadoutParam_RecAllFromHost ( ) = 0;
    virtual HRESULT __stdcall ReadoutParam_RecOneFromHost (
        short offset ) = 0;
    virtual HRESULT __stdcall ReadoutParam_TransAllToHost ( ) = 0;
    virtual HRESULT __stdcall Status_TransToHost ( ) = 0;
    virtual HRESULT __stdcall ConfigParam_RecAllFromHost ( ) = 0;
    virtual HRESULT __stdcall ConfigParam_RecOneFromHost ( ) = 0;
    virtual HRESULT __stdcall ConfigParam_TransToHost ( ) = 0;
    virtual HRESULT __stdcall ConfigTable_StoreInEEPROM ( ) = 0;
    virtual HRESULT __stdcall RemainingExposureTime_SendToHost (
        long * pVal ) = 0;
    virtual HRESULT __stdcall AbortReadout ( ) = 0;
    virtual HRESULT __stdcall ConfigTable_ReadFromEEPROM ( ) = 0;
    virtual HRESULT __stdcall RestartTheProgram ( ) = 0;
    virtual HRESULT __stdcall ClearFrame ( ) = 0;
    virtual HRESULT __stdcall ExternalRelayTurnOn ( ) = 0;
    virtual HRESULT __stdcall ExternalRelayTurnOff ( ) = 0;
    virtual HRESULT __stdcall ObtainTriggeredImage ( ) = 0;
    virtual HRESULT __stdcall DSPCodeSave ( ) = 0;
    virtual HRESULT __stdcall DSPCodeGet ( ) = 0;
    virtual HRESULT __stdcall FixedLengthTDIModeReadout ( ) = 0;
    virtual HRESULT __stdcall SetParamTablePath (
        BSTR bstrFile,
        BSTR bstrString ) = 0;
    virtual HRESULT __stdcall SetConfigTablePath (
        BSTR bstrFile,
        BSTR bstrString ) = 0;
    virtual HRESULT __stdcall get_ReadoutParam (
        int paramNo,
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_ReadoutParam (
        int paramNo,
        long pVal ) = 0;
    virtual HRESULT __stdcall get_ConfigParam (
        int paramNo,
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_ConfigParam (
        int paramNo,
        long pVal ) = 0;
    virtual HRESULT __stdcall get_StatusParam (
        int paramNo,
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_StatusParam (
        int paramNo,
        long pVal ) = 0;
    virtual HRESULT __stdcall get_COMPort (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_COMPort (
        short pVal ) = 0;
    virtual HRESULT __stdcall ChangeReadoutSpeed (
        int no ) = 0;
    virtual HRESULT __stdcall get_AvailableReadoutSpeeds (
        short * pVal ) = 0;
    virtual HRESULT __stdcall get_SerialBinning (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_SerialBinning (
        short pVal ) = 0;
    virtual HRESULT __stdcall get_ParallelBinning (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_ParallelBinning (
        short pVal ) = 0;
    virtual HRESULT __stdcall SetBinning (
        short SerialBinning,
        short ParallelBinning ) = 0;
    virtual HRESULT __stdcall get_ExposureTime (
        long * pVal ) = 0;
    virtual HRESULT __stdcall put_ExposureTime (
        long pVal ) = 0;
    virtual HRESULT __stdcall get_SerialOrigin (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_SerialOrigin (
        short pVal ) = 0;
    virtual HRESULT __stdcall get_ParallelOrigin (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_ParallelOrigin (
        short pVal ) = 0;
    virtual HRESULT __stdcall SetOrigin (
        short SerialOrigin,
        short ParallelOrigin ) = 0;
    virtual HRESULT __stdcall get_SerialLength (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_SerialLength (
        short pVal ) = 0;
    virtual HRESULT __stdcall get_ParalleLength (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_ParalleLength (
        short pVal ) = 0;
    virtual HRESULT __stdcall SetImageSize (
        short SerialLength,
        short ParallelLength ) = 0;
    virtual HRESULT __stdcall get_SerialPostscanSize (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_SerialPostscanSize (
        short pVal ) = 0;
    virtual HRESULT __stdcall get_ParallePostscanSize (
        short * pVal ) = 0;
    virtual HRESULT __stdcall put_ParallePostscanSize (
        short pVal ) = 0;
    virtual HRESULT __stdcall SetPostscanSize (
        short SerialPostscan,
        short ParallelPostscan ) = 0;
    virtual HRESULT __stdcall GetReadoutSpeed (
        short no,
        long * speed ) = 0;
    virtual HRESULT __stdcall SetReadoutSpeed (
        short no ) = 0;
    virtual HRESULT __stdcall StartStatusThread (
        long SleepTime ) = 0;
    virtual HRESULT __stdcall StopStatusThread ( ) = 0;
    virtual HRESULT __stdcall SetDisplayMode (
        short eMode ) = 0;
    virtual HRESULT __stdcall OpenDemoDisplay ( ) = 0;
    virtual HRESULT __stdcall CloseDemoDisplay ( ) = 0;
    virtual HRESULT __stdcall SetImageBuffer (
        struct IFSM_MemoryObject * piMemObj ) = 0;
    virtual HRESULT __stdcall SetDCFPath (
        short devNo,
        short digNo,
        BSTR bstrDCF ) = 0;
};

struct __declspec(uuid("635b4f42-b658-4952-8056-01293e032003"))
SI1100_MIL_Link;
    // [ default ] interface ISI1100_MIL_Link

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_CAMERALINKLib =
    {0xfc48a9e6,0x5422,0x432f,{0x8f,0x24,0x84,0x3a,0x28,0xaa,0x48,0x92}};
extern "C" const GUID __declspec(selectany) DIID__ICameraCtrlEvents =
    {0x36d64e79,0x4d06,0x443d,{0xb8,0xd4,0xb3,0x0e,0x72,0xf8,0x95,0xe9}};
extern "C" const GUID __declspec(selectany) IID_ISI1100_MIL_Link =
    {0x2bc903b7,0x25f0,0x4ae1,{0x93,0xf6,0x35,0xcf,0x3c,0x98,0x5c,0x07}};
extern "C" const GUID __declspec(selectany) CLSID_CoCameraCtrl =
    {0x926953f1,0x6502,0x477f,{0x99,0x6c,0xe1,0x6f,0xab,0xd9,0xa7,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ICameraCtrl =
    {0xacc08f2e,0x96ec,0x4828,{0x85,0x1f,0x70,0x5f,0x09,0xd5,0x95,0x3d}};
extern "C" const GUID __declspec(selectany) CLSID_SI1100_MIL_Link =
    {0x635b4f42,0xb658,0x4952,{0x80,0x56,0x01,0x29,0x3e,0x03,0x20,0x03}};

#pragma pack(pop)
