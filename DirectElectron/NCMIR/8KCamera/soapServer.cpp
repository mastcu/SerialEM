/* soapServer.cpp
   Generated by gSOAP 2.7.3 from .\webserviceCommands.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.3 2010-06-04 18:49:14 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (!--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getCurrentTiltAngle"))
		return soap_serve_ns__getCurrentTiltAngle(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setTiltAngle"))
		return soap_serve_ns__setTiltAngle(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setXYStagePosition"))
		return soap_serve_ns__setXYStagePosition(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setZ"))
		return soap_serve_ns__setZ(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getX"))
		return soap_serve_ns__getX(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getY"))
		return soap_serve_ns__getY(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getZ"))
		return soap_serve_ns__getZ(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setX"))
		return soap_serve_ns__setX(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:setY"))
		return soap_serve_ns__setY(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:NextMosaicMove"))
		return soap_serve_ns__NextMosaicMove(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:QueryMosaicImages"))
		return soap_serve_ns__QueryMosaicImages(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:BeginMosaic"))
		return soap_serve_ns__BeginMosaic(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:CheckifOk2Acquire"))
		return soap_serve_ns__CheckifOk2Acquire(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:SerialGotAcquireToken"))
		return soap_serve_ns__SerialGotAcquireToken(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getCurrentTiltAngle(struct soap *soap)
{	struct ns__getCurrentTiltAngle soap_tmp_ns__getCurrentTiltAngle;
	struct ns__getCurrentTiltAngleResponse soap_tmp_ns__getCurrentTiltAngleResponse;
	soap_default_ns__getCurrentTiltAngleResponse(soap, &soap_tmp_ns__getCurrentTiltAngleResponse);
	soap_default_ns__getCurrentTiltAngle(soap, &soap_tmp_ns__getCurrentTiltAngle);
	soap->encodingStyle = "";
	if (!soap_get_ns__getCurrentTiltAngle(soap, &soap_tmp_ns__getCurrentTiltAngle, "ns:getCurrentTiltAngle", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getCurrentTiltAngle(soap, soap_tmp_ns__getCurrentTiltAngle.a, soap_tmp_ns__getCurrentTiltAngleResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getCurrentTiltAngleResponse(soap, &soap_tmp_ns__getCurrentTiltAngleResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getCurrentTiltAngleResponse(soap, &soap_tmp_ns__getCurrentTiltAngleResponse, "ns:getCurrentTiltAngleResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getCurrentTiltAngleResponse(soap, &soap_tmp_ns__getCurrentTiltAngleResponse, "ns:getCurrentTiltAngleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setTiltAngle(struct soap *soap)
{	struct ns__setTiltAngle soap_tmp_ns__setTiltAngle;
	struct ns__setTiltAngleResponse soap_tmp_ns__setTiltAngleResponse;
	soap_default_ns__setTiltAngleResponse(soap, &soap_tmp_ns__setTiltAngleResponse);
	soap_default_ns__setTiltAngle(soap, &soap_tmp_ns__setTiltAngle);
	soap->encodingStyle = "";
	if (!soap_get_ns__setTiltAngle(soap, &soap_tmp_ns__setTiltAngle, "ns:setTiltAngle", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setTiltAngle(soap, soap_tmp_ns__setTiltAngle.tilt, soap_tmp_ns__setTiltAngleResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setTiltAngleResponse(soap, &soap_tmp_ns__setTiltAngleResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setTiltAngleResponse(soap, &soap_tmp_ns__setTiltAngleResponse, "ns:setTiltAngleResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setTiltAngleResponse(soap, &soap_tmp_ns__setTiltAngleResponse, "ns:setTiltAngleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setXYStagePosition(struct soap *soap)
{	struct ns__setXYStagePosition soap_tmp_ns__setXYStagePosition;
	struct ns__setXYStagePositionResponse soap_tmp_ns__setXYStagePositionResponse;
	soap_default_ns__setXYStagePositionResponse(soap, &soap_tmp_ns__setXYStagePositionResponse);
	soap_default_ns__setXYStagePosition(soap, &soap_tmp_ns__setXYStagePosition);
	soap->encodingStyle = "";
	if (!soap_get_ns__setXYStagePosition(soap, &soap_tmp_ns__setXYStagePosition, "ns:setXYStagePosition", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setXYStagePosition(soap, soap_tmp_ns__setXYStagePosition.x, soap_tmp_ns__setXYStagePosition.y, soap_tmp_ns__setXYStagePositionResponse.r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setXYStagePositionResponse(soap, &soap_tmp_ns__setXYStagePositionResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setXYStagePositionResponse(soap, &soap_tmp_ns__setXYStagePositionResponse, "ns:setXYStagePositionResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setXYStagePositionResponse(soap, &soap_tmp_ns__setXYStagePositionResponse, "ns:setXYStagePositionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setZ(struct soap *soap)
{	struct ns__setZ soap_tmp_ns__setZ;
	struct ns__setZResponse soap_tmp_ns__setZResponse;
	soap_default_ns__setZResponse(soap, &soap_tmp_ns__setZResponse);
	soap_default_ns__setZ(soap, &soap_tmp_ns__setZ);
	soap->encodingStyle = "";
	if (!soap_get_ns__setZ(soap, &soap_tmp_ns__setZ, "ns:setZ", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setZ(soap, soap_tmp_ns__setZ.z, soap_tmp_ns__setZResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setZResponse(soap, &soap_tmp_ns__setZResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setZResponse(soap, &soap_tmp_ns__setZResponse, "ns:setZResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setZResponse(soap, &soap_tmp_ns__setZResponse, "ns:setZResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getX(struct soap *soap)
{	struct ns__getX soap_tmp_ns__getX;
	struct ns__getXResponse soap_tmp_ns__getXResponse;
	soap_default_ns__getXResponse(soap, &soap_tmp_ns__getXResponse);
	soap_default_ns__getX(soap, &soap_tmp_ns__getX);
	soap->encodingStyle = "";
	if (!soap_get_ns__getX(soap, &soap_tmp_ns__getX, "ns:getX", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getX(soap, soap_tmp_ns__getX.x, soap_tmp_ns__getXResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getXResponse(soap, &soap_tmp_ns__getXResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getXResponse(soap, &soap_tmp_ns__getXResponse, "ns:getXResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getXResponse(soap, &soap_tmp_ns__getXResponse, "ns:getXResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getY(struct soap *soap)
{	struct ns__getY soap_tmp_ns__getY;
	struct ns__getYResponse soap_tmp_ns__getYResponse;
	soap_default_ns__getYResponse(soap, &soap_tmp_ns__getYResponse);
	soap_default_ns__getY(soap, &soap_tmp_ns__getY);
	soap->encodingStyle = "";
	if (!soap_get_ns__getY(soap, &soap_tmp_ns__getY, "ns:getY", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getY(soap, soap_tmp_ns__getY.y, soap_tmp_ns__getYResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getYResponse(soap, &soap_tmp_ns__getYResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getYResponse(soap, &soap_tmp_ns__getYResponse, "ns:getYResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getYResponse(soap, &soap_tmp_ns__getYResponse, "ns:getYResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getZ(struct soap *soap)
{	struct ns__getZ soap_tmp_ns__getZ;
	struct ns__getZResponse soap_tmp_ns__getZResponse;
	soap_default_ns__getZResponse(soap, &soap_tmp_ns__getZResponse);
	soap_default_ns__getZ(soap, &soap_tmp_ns__getZ);
	soap->encodingStyle = "";
	if (!soap_get_ns__getZ(soap, &soap_tmp_ns__getZ, "ns:getZ", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getZ(soap, soap_tmp_ns__getZ.z, soap_tmp_ns__getZResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getZResponse(soap, &soap_tmp_ns__getZResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__getZResponse(soap, &soap_tmp_ns__getZResponse, "ns:getZResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getZResponse(soap, &soap_tmp_ns__getZResponse, "ns:getZResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setX(struct soap *soap)
{	struct ns__setX soap_tmp_ns__setX;
	struct ns__setXResponse soap_tmp_ns__setXResponse;
	soap_default_ns__setXResponse(soap, &soap_tmp_ns__setXResponse);
	soap_default_ns__setX(soap, &soap_tmp_ns__setX);
	soap->encodingStyle = "";
	if (!soap_get_ns__setX(soap, &soap_tmp_ns__setX, "ns:setX", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setX(soap, soap_tmp_ns__setX.x, soap_tmp_ns__setXResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setXResponse(soap, &soap_tmp_ns__setXResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setXResponse(soap, &soap_tmp_ns__setXResponse, "ns:setXResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setXResponse(soap, &soap_tmp_ns__setXResponse, "ns:setXResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__setY(struct soap *soap)
{	struct ns__setY soap_tmp_ns__setY;
	struct ns__setYResponse soap_tmp_ns__setYResponse;
	soap_default_ns__setYResponse(soap, &soap_tmp_ns__setYResponse);
	soap_default_ns__setY(soap, &soap_tmp_ns__setY);
	soap->encodingStyle = "";
	if (!soap_get_ns__setY(soap, &soap_tmp_ns__setY, "ns:setY", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__setY(soap, soap_tmp_ns__setY.y, soap_tmp_ns__setYResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setYResponse(soap, &soap_tmp_ns__setYResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__setYResponse(soap, &soap_tmp_ns__setYResponse, "ns:setYResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setYResponse(soap, &soap_tmp_ns__setYResponse, "ns:setYResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__NextMosaicMove(struct soap *soap)
{	struct ns__NextMosaicMove soap_tmp_ns__NextMosaicMove;
	struct ns__NextMosaicMoveResponse soap_tmp_ns__NextMosaicMoveResponse;
	soap_default_ns__NextMosaicMoveResponse(soap, &soap_tmp_ns__NextMosaicMoveResponse);
	soap_default_ns__NextMosaicMove(soap, &soap_tmp_ns__NextMosaicMove);
	soap->encodingStyle = "";
	if (!soap_get_ns__NextMosaicMove(soap, &soap_tmp_ns__NextMosaicMove, "ns:NextMosaicMove", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__NextMosaicMove(soap, soap_tmp_ns__NextMosaicMove.MoveType, soap_tmp_ns__NextMosaicMoveResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__NextMosaicMoveResponse(soap, &soap_tmp_ns__NextMosaicMoveResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__NextMosaicMoveResponse(soap, &soap_tmp_ns__NextMosaicMoveResponse, "ns:NextMosaicMoveResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__NextMosaicMoveResponse(soap, &soap_tmp_ns__NextMosaicMoveResponse, "ns:NextMosaicMoveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__QueryMosaicImages(struct soap *soap)
{	struct ns__QueryMosaicImages soap_tmp_ns__QueryMosaicImages;
	struct ns__QueryMosaicImagesResponse soap_tmp_ns__QueryMosaicImagesResponse;
	soap_default_ns__QueryMosaicImagesResponse(soap, &soap_tmp_ns__QueryMosaicImagesResponse);
	soap_default_ns__QueryMosaicImages(soap, &soap_tmp_ns__QueryMosaicImages);
	soap->encodingStyle = "";
	if (!soap_get_ns__QueryMosaicImages(soap, &soap_tmp_ns__QueryMosaicImages, "ns:QueryMosaicImages", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__QueryMosaicImages(soap, soap_tmp_ns__QueryMosaicImages.Type, soap_tmp_ns__QueryMosaicImagesResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__QueryMosaicImagesResponse(soap, &soap_tmp_ns__QueryMosaicImagesResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__QueryMosaicImagesResponse(soap, &soap_tmp_ns__QueryMosaicImagesResponse, "ns:QueryMosaicImagesResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__QueryMosaicImagesResponse(soap, &soap_tmp_ns__QueryMosaicImagesResponse, "ns:QueryMosaicImagesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__BeginMosaic(struct soap *soap)
{	struct ns__BeginMosaic soap_tmp_ns__BeginMosaic;
	struct ns__BeginMosaicResponse soap_tmp_ns__BeginMosaicResponse;
	soap_default_ns__BeginMosaicResponse(soap, &soap_tmp_ns__BeginMosaicResponse);
	soap_default_ns__BeginMosaic(soap, &soap_tmp_ns__BeginMosaic);
	soap->encodingStyle = "";
	if (!soap_get_ns__BeginMosaic(soap, &soap_tmp_ns__BeginMosaic, "ns:BeginMosaic", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__BeginMosaic(soap, soap_tmp_ns__BeginMosaic.MosaicType, soap_tmp_ns__BeginMosaicResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__BeginMosaicResponse(soap, &soap_tmp_ns__BeginMosaicResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__BeginMosaicResponse(soap, &soap_tmp_ns__BeginMosaicResponse, "ns:BeginMosaicResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__BeginMosaicResponse(soap, &soap_tmp_ns__BeginMosaicResponse, "ns:BeginMosaicResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__CheckifOk2Acquire(struct soap *soap)
{	struct ns__CheckifOk2Acquire soap_tmp_ns__CheckifOk2Acquire;
	struct ns__CheckifOk2AcquireResponse soap_tmp_ns__CheckifOk2AcquireResponse;
	soap_default_ns__CheckifOk2AcquireResponse(soap, &soap_tmp_ns__CheckifOk2AcquireResponse);
	soap_default_ns__CheckifOk2Acquire(soap, &soap_tmp_ns__CheckifOk2Acquire);
	soap->encodingStyle = "";
	if (!soap_get_ns__CheckifOk2Acquire(soap, &soap_tmp_ns__CheckifOk2Acquire, "ns:CheckifOk2Acquire", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__CheckifOk2Acquire(soap, soap_tmp_ns__CheckifOk2Acquire.MosaicType, soap_tmp_ns__CheckifOk2AcquireResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__CheckifOk2AcquireResponse(soap, &soap_tmp_ns__CheckifOk2AcquireResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__CheckifOk2AcquireResponse(soap, &soap_tmp_ns__CheckifOk2AcquireResponse, "ns:CheckifOk2AcquireResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__CheckifOk2AcquireResponse(soap, &soap_tmp_ns__CheckifOk2AcquireResponse, "ns:CheckifOk2AcquireResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SerialGotAcquireToken(struct soap *soap)
{	struct ns__SerialGotAcquireToken soap_tmp_ns__SerialGotAcquireToken;
	struct ns__SerialGotAcquireTokenResponse soap_tmp_ns__SerialGotAcquireTokenResponse;
	soap_default_ns__SerialGotAcquireTokenResponse(soap, &soap_tmp_ns__SerialGotAcquireTokenResponse);
	soap_default_ns__SerialGotAcquireToken(soap, &soap_tmp_ns__SerialGotAcquireToken);
	soap->encodingStyle = "";
	if (!soap_get_ns__SerialGotAcquireToken(soap, &soap_tmp_ns__SerialGotAcquireToken, "ns:SerialGotAcquireToken", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__SerialGotAcquireToken(soap, soap_tmp_ns__SerialGotAcquireToken.confirm, soap_tmp_ns__SerialGotAcquireTokenResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__SerialGotAcquireTokenResponse(soap, &soap_tmp_ns__SerialGotAcquireTokenResponse);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put_ns__SerialGotAcquireTokenResponse(soap, &soap_tmp_ns__SerialGotAcquireTokenResponse, "ns:SerialGotAcquireTokenResponse", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	};
	if (soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__SerialGotAcquireTokenResponse(soap, &soap_tmp_ns__SerialGotAcquireTokenResponse, "ns:SerialGotAcquireTokenResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */
